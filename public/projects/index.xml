<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Projects on Kerem B端kr端</title>
    <link>http://localhost:1313/projects/</link>
    <description>Recent content in Projects on Kerem B端kr端</description>
    <generator>Hugo -- 0.134.1</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 07 Sep 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/projects/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Variational Quantum Linear Solver applied to Gaussian Process Regression</title>
      <link>http://localhost:1313/projects/project1/</link>
      <pubDate>Sat, 07 Sep 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/projects/project1/</guid>
      <description>&lt;script src=&#34;https://polyfill.io/v3/polyfill.min.js?features=es6&#34;&gt;&lt;/script&gt;
&lt;script id=&#34;MathJax-script&#34; async src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js&#34;&gt;&lt;/script&gt;
&lt;h3 id=&#34;variational-quantum-linear-solver-vqls&#34;&gt;Variational Quantum Linear Solver (VQLS)&lt;/h3&gt;
&lt;h4 id=&#34;motivation&#34;&gt;Motivation&lt;/h4&gt;
&lt;p&gt;Solving linear systems of equations is a fundamental task in many applications, including machine learning. Given a linear system problem ( A x = b ), where ( A \in \mathbb{R}^{N \times N} ) and ( b \in \mathbb{R}^N ), the goal is to find the solution vector ( x \in \mathbb{R}^N ). Traditional methods like matrix inversion yield the solution as ( x = A^{-1} b ), but this approach has a computational complexity of ( \mathcal{O}(N^3) ), making it impractical for large ( N ).&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
